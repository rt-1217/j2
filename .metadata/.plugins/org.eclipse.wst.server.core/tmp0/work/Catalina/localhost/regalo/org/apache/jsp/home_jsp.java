/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.32
 * Generated at: 2018-06-29 04:54:05 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class home_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/struts2-core-2.3.34.jar", Long.valueOf(1529644371493L));
    _jspx_dependants.put("jar:file:/C:/Users/internousdev/Desktop/workspace/workspace-tanno/j2/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/regalo/WEB-INF/lib/struts2-core-2.3.34.jar!/META-INF/struts-tags.tld", Long.valueOf(1504613532000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta http-equiv=\"Content-Script-Type\" content=\"text/javascript\" />\r\n");
      out.write("<meta http-equiv=\"Content-Style-Type\" content=\"text/css\"/>\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"\">\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"./css/includeHeader.css\">\r\n");
      out.write("<!-- <link href=\"https://fonts.googleapis.com/css?family=Arizonia|Cinzel\" rel=\"stylesheet\"> -->\r\n");
      out.write("<link href=\"https://fonts.googleapis.com/css?family=Arizonia|Cinzel|Cormorant+Garamond\" rel=\"stylesheet\">\r\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script>\r\n");
      out.write("<script src=\"https://cdnjs.cloudflare.com/ajax/libs/gsap/2.0.1/TweenMax.min.js\"></script>\r\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1/jquery.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<script src=\"./js/fade.js\" type=\"text/javascript\"></script>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("  $(function(){\r\n");
      out.write("    $('.bgslideshow img:gt(0)').hide();\r\n");
      out.write("    setInterval(function() {\r\n");
      out.write("      $('.bgslideshow :first-child').fadeOut(5000)\r\n");
      out.write("        .next('img').fadeIn(5000)\r\n");
      out.write("      .end().appendTo('.bgslideshow');\r\n");
      out.write("    }, 4000);\r\n");
      out.write("  });\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<title>ホーム画面</title>\r\n");
      out.write("\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("\r\n");
      out.write("html {\r\n");
      out.write("\twidth:100%;\r\n");
      out.write("\theight:100%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("/* #box { */\r\n");
      out.write("/* \tmargin:0 auto; */\r\n");
      out.write("/* \tbackground:white; */\r\n");
      out.write("/* } */\r\n");
      out.write("\r\n");
      out.write("svg {\r\n");
      out.write("    position:relative;\r\n");
      out.write("    top:350px;\r\n");
      out.write("    right:280px;\r\n");
      out.write(" \twidth:100%;\r\n");
      out.write(" \theight:120%;\r\n");
      out.write(" }\r\n");
      out.write("\r\n");
      out.write("#text {\r\n");
      out.write("\tposition:absolute;\r\n");
      out.write("\ttop:50%;\r\n");
      out.write("\tleft:50%;\r\n");
      out.write("\t-webkit-transform: translate(-50%,-50%);\r\n");
      out.write("\t-moz-transform: translate(-50%,-50%);\r\n");
      out.write("\t-ms-transform: translate(-50%,-50%);\r\n");
      out.write("\t-o-transform: translate(-50%,-50%);\r\n");
      out.write("\ttransform: translate(-50%,-50%);\r\n");
      out.write("\r\n");
      out.write("\tcolor:white;\r\n");
      out.write("\r\n");
      out.write("    font-size: 150px;\r\n");
      out.write("\r\n");
      out.write("    font-family: 'Cinzel', serif;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("@-webkit-keyframes stroke-anim {\r\n");
      out.write("  0% {\r\n");
      out.write("    /* 100%だと最後まで表示されないので多めに設定する */\r\n");
      out.write("    stroke-dashoffset: 100%;\r\n");
      out.write("    fill:transparent;\r\n");
      out.write("  }\r\n");
      out.write("  50% {\r\n");
      out.write("    fill:transparent;\r\n");
      out.write("  }\r\n");
      out.write("  100% {\r\n");
      out.write("    stroke-dashoffset: 0%;\r\n");
      out.write("    fill:white;\r\n");
      out.write("  }\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("@keyframes stroke-anim {\r\n");
      out.write("  0% {\r\n");
      out.write("    /* 100%だと最後まで表示されないので多めに設定する */\r\n");
      out.write("    stroke-dashoffset: 100%;\r\n");
      out.write("    fill:transparent;\r\n");
      out.write("  }\r\n");
      out.write("  50% {\r\n");
      out.write("    fill:transparent;\r\n");
      out.write("  }\r\n");
      out.write("  100% {\r\n");
      out.write("    stroke-dashoffset: 0%;\r\n");
      out.write("    fill:white;\r\n");
      out.write("  }\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("   .bgslideshow { position: fixed; left:0; top:0; z-index: -1; height: 100%; width: 100%; }\r\n");
      out.write("   .bgslideshow img { position: absolute; min-height: 90%; min-width: 100%; width: 100%; height: 100%;left:0; top:0; }\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div id=\"main\">\r\n");
      out.write("\t<!-- ヘッダー -->\r\n");
      out.write(" \t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "includeHeader.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write(" \t<span id=\"text\">REGALO</span>\r\n");
      out.write(" \t");
      out.write("\r\n");
      out.write("<div class=\"bgslideshow\">\r\n");
      out.write("<img  src=\"./images/haikei10.jpg\">\r\n");
      out.write("<img  src=\"./images/haikei12.jpg\" >\r\n");
      out.write("<img  src=\"./images/haikei16.jpg\" >\r\n");
      out.write("</div>\r\n");
      out.write("</div>\r\n");
      out.write("<!-- \tフッター -->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
